import {
  IsEntityExisted,
  MgrMetaTables,
  SpecificProjectType,
  TmplMetaTables,
} from '@indiebase/server-shared';
import { ApiProperty } from '@nestjs/swagger';
import { IsEmail, IsHash } from 'class-validator';

export class LocalSignInDTO {
  @ApiProperty({
    description: 'Hacker account',
    default: 'dev@indiebase.com',
  })
  @IsEntityExisted(
    {
      type: SpecificProjectType.fromHeader,
      table: TmplMetaTables.users,
      column: 'email',
      $eq: {
        mgr: {
          table: MgrMetaTables.hackers,
          column: 'email',
        },
      },
    },
    {
      throwExistedMsg: false,
    },
  )
  @IsEmail()
  email: string;

  @ApiProperty({
    description:
      'Hacker account password, the password needs to be converted to SHA256 for transfer',
    default: '1999569bbac0ab43f31808866fcd15a0b20d309ccd64410d470455076e582a6c',
  })
  @IsHash('sha256', {
    message: 'Password needs to be converted to SHA256',
  })
  password: string;
}

export class OptVerifyDTO {
  // @ApiProperty({
  //   description: 'Otp secret from /2fa/gen',
  // })
  // @IsString({
  //   message: "secret shouldn't be empty",
  // })
  // secret: string;
  // @ApiProperty({
  //   description: 'The code generated by authenticate apps',
  // })
  // @IsString({
  //   message: "token shouldn't be empty",
  // })
  // token: string;
}
