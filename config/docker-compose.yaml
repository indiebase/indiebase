version: '3.7'

secrets:
  secret_key:
    external: true
  access_key:
    external: true

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-01-08T03-11-54Z
  command: server --console-address ":9001" /minio_data1
  secrets:
    - access_key
    - secret_key
  environment:
    MINIO_ACCESS_KEY_FILE: /run/secrets/access_key
    MINIO_SECRET_KEY_FILE: /run/secrets/secret_key

x-logging: &loki-logging
  driver: loki
  options:
    loki-url: 'http://YOUR_IP:13339/loki/api/v1/push'
    max-size: '200m'

services:
  apisix-dashboard:
    image: apache/apisix-dashboard:2.10.1-alpine
    volumes:
      - ./apisix/dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
      - '13336:9000'
    networks:
      - apisix

  apisix:
    image: apache/apisix:2.11.0-alpine
    volumes:
      - apisix_logs:/usr/local/apisix/logs
      - ./apisix/apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ports:
      - '13320:9080/tcp'
      - '13321:9091/tcp'
      - '13322:9443/tcp'
      - '13323:9092/tcp'
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - apisix

  etcd:
    image: bitnami/etcd:3.4.15
    volumes:
      - etcd_data:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: 'true'
      ALLOW_NONE_AUTHENTICATION: 'yes'
      ETCD_ADVERTISE_CLIENT_URLS: 'http://0.0.0.0:2379'
      ETCD_LISTEN_CLIENT_URLS: 'http://0.0.0.0:2379'
    ports:
      - '2379:2379/tcp'
    networks:
      - apisix

  prometheus:
    image: prom/prometheus:v2.25.0
    volumes:
      - ./prometheus/prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '13334:9090'
    networks:
      - apisix

  grafana:
    image: grafana/grafana:7.3.7
    ports:
      - '13335:3000'
    volumes:
      - './grafana/provisioning:/etc/grafana/provisioning'
      - './grafana/dashboards:/var/lib/grafana/dashboards'
      - './grafana/config/grafana.ini:/etc/grafana/grafana.ini'
      - 'grafana_data:/var/lib/grafana'
    environment:
      - TZ=Asia/Shanghai
      - LANG=zh_CN.UTF-8
    # logging: *loki-logging
    networks:
      - apisix
      - loki

  minio:
    <<: *minio-common
    hostname: minio
    volumes:
      - minio_data1_1:/minio_data1
      - minio_data1_2:/minio_data2

  nginx:
    image: nginx:1.21.5-alpine
    hostname: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - '13337:9000'
      - '13338:9001'
    depends_on:
      - minio

  nacos:
    image: nacos/nacos-server:v2.0.4
    env_file:
      - ./nacos/nacos.env
    volumes:
      - mysql_logs:/home/nacos/logs
    ports:
      - '13324:8848'
      - '13325:9848'
      - '13326:9555'
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - mysql

  mysql:
    image: nacos/nacos-mysql:8.0.16
    env_file:
      - ./db/mysql.env
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - '3306:3306'

  portainer-agent:
    image: portainer/agent:2.11.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:2.11.0
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify
    ports:
      - '13331:9443'
    volumes:
      - portainer_data:/data
    networks:
      - agent_network
    deploy:
      mode: replicated
      replicas: 1

  loki:
    image: grafana/loki:2.4.1
    ports:
      - '13339:3100'
    command: -config.file=/etc/loki/local-config.yaml -frontend.instance-addr=127.0.0.1
    networks:
      - loki

  promtail:
    image: grafana/promtail:2.4.1
    volumes:
      - loki_logs:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki
  redis:
    image: redis:6.2.6-alpine
    volumes:
      - loki_logs:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki

networks:
  apisix:
    driver: overlay
    attachable: true
  agent_network:
    driver: overlay
    attachable: true
  loki:

volumes:
  etcd_data:
    driver: local
  mysql_data:
  grafana_data:
  portainer_data:
  apisix_logs:
  mysql_logs:
  minio_data1_1:
  minio_data1_2:
  loki_logs:
