name: 'msg'

on:
  push:
    branches:
      - 'main'
    paths:
      - 'packages/msg/**'
      - '.github/workflows/msg.yaml'

env:
  REGISTRY: registry.cn-hangzhou.aliyuncs.com
  IMAGE_NAME: msg

jobs:
  push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          token: ${{ secrets.REPO_TOKEN }}

      - name: Display current directories
        run: |
          echo Current: $(pwd)
          echo Directories: $(ls -a)
          echo Pro Directories: $(ls ./pro -a)
          ls -al ../

      - name: Setup Docker build
        uses: docker/setup-buildx-action@v1

      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: ./yarn.lock

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/letscollab-test/${{ env.IMAGE_NAME }}

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install nodejs deps
        working-directory: .
        run: |
          yarn install --immutable --check-cache

      - name: Build dist
        run: |
          echo Current: $(pwd)
          echo Directories: $(ls node_modules)
          yarn ncc
        working-directory: ./packages/msg

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: packages/msg
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            RUNTIME_ENV=development
