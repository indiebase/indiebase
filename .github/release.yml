# name: letscollab production

# on:
#   push:
#     tags:
#       - 'v*.*.*'

# env:
#   REGISTRY: docker.io
#   IMAGE_NAME: ${{ github.repository }}

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Install cosign
#         if: github.event_name != 'pull_request'
#         uses: sigstore/cosign-installer@main
#         with:
#           cosign-release: 'v1.4.0'

#       - name: Setup Docker buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Log into registry ${{ env.REGISTRY }}
#         if: github.event_name != 'pull_request'
#         uses: docker/login-action@v1
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Extract Docker metadata
#         id: meta
#         uses: docker/metadata-action@v3
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

#       - name: Build and push Docker image
#         id: build-and-push
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           push: ${{ github.event_name != 'pull_request' }}
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}

#       - name: Sign the published Docker image
#         if: ${{ github.event_name != 'pull_request' }}
#         env:
#           COSIGN_EXPERIMENTAL: 'true'
#         run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
