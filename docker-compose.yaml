version: '3.7'

x-logging: &loki-logging
  driver: loki:latest
  options:
    loki-url: 'http://loki:3100/loki/api/v1/push'
    max-size: '300m'

services:
  apisix-dashboard:
    image: apache/apisix-dashboard:2.13-alpine
    volumes:
      - ./config/apisix/dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
      - 13336:9000

  apisix:
    image: apache/apisix:2.14.1-alpine
    volumes:
      - apisix_logs:/usr/local/apisix/logs
      - ./config/apisix/apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ports:
      - 13320:9080/tcp
      - 13321:9091/tcp
      - 13322:9443/tcp
      - 13323:9092/tcp
    deploy:
      restart_policy:
        condition: on-failure
    logging: *loki-logging

  etcd:
    image: bitnami/etcd:3.4.15
    volumes:
      - etcd_data:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: 'true'
      ALLOW_NONE_AUTHENTICATION: 'yes'
      ETCD_ADVERTISE_CLIENT_URLS: 'http://0.0.0.0:2379'
      ETCD_LISTEN_CLIENT_URLS: 'http://0.0.0.0:2379'
    ports:
      - 2379:2379/tcp
    logging: *loki-logging

  prometheus:
    image: prom/prometheus:v2.25.0
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - 13334:9090
    logging: *loki-logging

  nacos:
    image: nacos/nacos-server:v2.0.4
    env_file:
      - ./.env.development
    volumes:
      - nacos_logs:/home/nacos/logs
    ports:
      - 13324:8848
      - 13325:9848
      - 13326:9555
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 512M
    depends_on:
      - mysql
    logging: *loki-logging
  mysql:
    image: nacos/nacos-mysql:8.0.16
    env_file:
      - ./.env.development
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - 3306:3306
    logging: *loki-logging

  mysqlexporter:
    image: prom/mysqld-exporter
    ports:
      - 9104:9104
    env_file:
      - ./.env.development

  portainer-agent:
    image: portainer/agent:2.11.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:2.11.0
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify
    ports:
      - 13331:9443
    volumes:
      - portainer_data:/data
    networks:
      - agent_network
    deploy:
      mode: replicated
      replicas: 1

  # Grafana
  grafana:
    image: grafana/grafana:7.5.15
    ports:
      - 13335:3000
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana_data:/var/lib/grafana
    environment:
      - TZ=Asia/Shanghai
      - LANG=zh_CN.UTF-8
    logging: *loki-logging

  loki:
    image: grafana/loki:2.2.1
    volumes:
      - ./config/loki/config.yaml:/etc/loki/config.yaml
      - loki_data:/loki
    ports:
      - 13339:3100
    command: -config.file=/etc/loki/config.yaml
    logging: *loki-logging

  promtail:
    image: grafana/promtail:2.2.1
    volumes:
      - ./config/promtail:/etc/promtail/
      - /var/log:/ext_logs:ro
    command: -config.file=/etc/promtail/config.yaml
    logging: *loki-logging

  rabbitmq:
    image: rabbitmq:3.9.14-management
    ports:
      - 13340:5672
      - 13341:15672
    logging: *loki-logging
  redis:
    image: redis:6.2.6-alpine
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
      - ./config/redis:/usr/local/etc/redis
    command: redis-server /usr/local/etc/redis/redis.conf
    logging: *loki-logging
networks:
  agent_network:
    driver: overlay
    attachable: true

volumes:
  etcd_data:
    driver: local
  mysql_data:
  postgres_data:
  grafana_data:
  portainer_data:
  prometheus_data:
  loki_data:
  redis_data:
  apisix_logs:
  nacos_logs:
  loki_logs:

  # seaweedfs-volume:
  #   image: chrislusf/seaweedfs # use a remote dev image
  #   ports:
  #     - 13344:8080
  #     - 13345:18080
  #     - 13346:9325
  #   command: 'volume -mserver="seaweedfs:9333" -port=8080  -metricsPort=9325'
  #   depends_on:
  #     - seaweedfs

  # seaweedfs-filer:
  #   image: chrislusf/seaweedfs # use a remote image
  #   ports:
  #     - 13347:8888
  #     - 13348:18888
  #     - 13349:9326
  #   command: 'filer -master="seaweedfs:9333"  -metricsPort=9326'
  #   tty: true
  #   stdin_open: true
  #   depends_on:
  #     - seaweedfs
  #     - seaweedfs-volume

  # seaweedfs-s3:
  #   image: chrislusf/seaweedfs # use a remote image
  #   ports:
  #     - 13350:8333
  #     - 13351:9327
  #   command: 's3 -filer="seaweedfs-filer:8888" -metricsPort=9327'
  #   depends_on:
  #     - seaweedfs
  #     - seaweedfs-volume
  #     - seaweedfs-filer

  # seaweedfs-webdav:
  #   image: chrislusf/seaweedfs # use a remote image
  #   ports:
  #     - 13352:7333
  #   command: 'webdav -filer="seaweedfs-filer:8888"'
  #   depends_on:
  #     - seaweedfs
  #     - seaweedfs-volume
  #     - seaweedfs-filer
